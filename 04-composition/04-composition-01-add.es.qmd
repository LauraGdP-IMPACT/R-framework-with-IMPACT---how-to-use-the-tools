---
title: "02 - El marco R de IMPACT - session 2"
author: "Yann Say"
date: last-modified

---
# Composición - añadir indicadores

El marco se basa en 4 etapas : limpieza, composición, análisis, resultados.

-   *Limpieza*: cualquier manipulación necesaria para pasar de los datos brutos a los datos limpios.
-   *Composición*: cualquier manipulaciòn anterior al análisis p.ej., añadir indicadores, añadir información proveniente del bucle o del dato principal , agragación por AOK, etc.
-   *Análisis*: cualquier manipulaciòn que sea relativa al análisis unicamente.
-   *Resultados*: cualquier manipulaciòn necesaria para formatear los resultados.

En la siguiente sección miraremos ciertas funciones usadas durante la etapa de composición.

![](../config/images/step - composition.png)


```{r}
#| warning: false
library(impactR4PHU)
library(dplyr)

my_data <- impactR4PHU::impactR4PHU_data_template |>  
  filter(respondent_consent != "no") 
```

::: {.callout-tip appearance="minimal"}
### add\_\*

![](../config/images/verb - add.png)

Las funciones **add_**\* le añaden una variable (columna) al conjunto de datos. Por ejemplo, añadir la duración de una encuesta, añadir la categoría de puntaje de consumo de alimentos (FCS)...

Las funciones **add_**\* toman como entrada el conjunto de datos y retornan el conjunto de datos con el nuevo indicador (y toda variable intermedia necesaria).

Un ejemplo es añadir la duración de cada encuesta usando el tiempo de inicio y de fin.

Al usar la función `addindicators` se puede que algunas columnas intermedias sean añadidas al conjunto de datos si son necesarias para el calculo del indicador deseado.
:::

## add_fcs

```{r}
my_data_with_fcs <- my_data %>% add_fcs(
  cutoffs = "normal"
)

my_data_with_fcs[, tail(names(my_data_with_fcs), 10)] %>%
  head()
```
::: {.callout-note .column-margin}
En este [enlace](https://fscluster.org/handbook/) entrará mas información sobre los indicadores de seguridad alimentaria.
:::

## add_hhs

::: {.callout-tip appearance="minimal"}
### Pipe-able (encadenable)

El marco se basa en 2 adjetivos, **pipeable** (encadenable) e **independiente**. En particular, funciones de la misma familia deben ser encadenable. En el siguiente ejemplo, se encadenan dos funciones **add\_**\*.
:::


```{r}
my_data_with_indicators <- my_data %>%
  add_fcs(
  cutoffs = "normal"
) %>%
  add_hhs(
  )

my_data_with_indicators[, tail(names(my_data_with_indicators), 14)] %>%
  head()
```

# Composición - verificar un indicador

Las funciones de verificación de indicadores comparan dos indicadores entre si, no verifican cómo se creó el indicador ni buscan inconsistencias. Eso significa que, para revisar un indicador, es necesario crear uno y compararlo al otro.
Para lo ultimo, se puede usar las funciones `review_one_variable` y `review_variables`.

## review_variables

Primero, creamos un nuevo conjunto de datos para la revisión.

```{r}
review_df <- my_data %>%
  add_fcs(
  cutoffs = "normal",
  ) %>%
  select(uuid, fsl_fcs_score, fsl_fcs_cat)
```

Luego, unimos los datos por revisar y el nuevo conjunto de datos.

```{r}
binded_df <- my_data_with_indicators %>%
  full_join(review_df, by = "uuid")
```

::: {.callout-note .column-margin}
Se recomienda usar un `full_join` en ligar de un `left/right_join`. De esa manera, se detectará si faltan valores.
:::

::: {.callout-note .column-margin}
Al usar la función `join_*`, si hay dos columnas con el mismo nombre en los conjuntos de datos unidos, R añadira los prefijos ".x" y ".y" a dichas columnas.
:::

::: {.callout-tip appearance="minimal"}
### review\_\*

![](../config/images/verb - review.png)

Las funciones**review_**\* revisan un objeto comparándolo con estándares u otro objeto y marcan las diferencias. Por ejemplo, revisando la limpiezo al comparar el conjunto de datos en bruto, el conjunto de datos limpio y el registro de limpieza o realizando un análisis y comparándolo con otro análisis.
:::
```{r}
library(addindicators)
```

```{r}
review_one_var <- review_variables(binded_df,
  columns_to_review = "fsl_fcs_cat.x",
  columns_to_compare_with = "fsl_fcs_cat.y")


review_one_var %>% 
  names()
```
La salida es una lista que contiene el conjunto de datos y una tabla de revisión.

```{r}
review_one_var$review_table %>% 
  head()
```

Se puede hacer un resumen de la tabla de revisión para obtener una visión general mas rapidamente.

```{r}
review_one_var$review_table %>%
  group_by(review_check, review_comment) %>%
  tally()
```

Para ver cómo se muestran las diferencias, se introduce algo de ruido en el conjunto de datos.

```{r}
jittered_df <- binded_df
set.seed(123)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.x"] <- sample(unique(jittered_df$fsl_fcs_cat.y), 5, T)
set.seed(124)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.y"] <- sample(unique(jittered_df$fsl_fcs_cat.y), 5, T)
set.seed(125)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.x"] <- NA
set.seed(1236)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_cat.y"] <- NA
set.seed(1237)
jittered_df[sample(1:nrow(jittered_df), 5), "fsl_fcs_score.x"] <- sample(unique(jittered_df$fsl_fcs_score.x), 5, T)
```

```{r}
review_one_variable_jittered <- review_variables(jittered_df,
  columns_to_review = "fsl_fcs_cat.x",
  columns_to_compare_with = "fsl_fcs_cat.y")

review_one_variable_jittered$review_table %>%
  group_by(review_check, review_comment) %>%
  tally()
```

El conjunto de datos tiene nuevas columnas que ayudan a filtrar para una revisión más detallada.

```{r}
review_one_variable_jittered$dataset[, tail(names(review_one_variable_jittered$dataset), 5)] %>%
  head()
```
```{r}
review_one_variable_jittered$dataset %>%
  filter(!review_check_fsl_fcs_cat.x) %>%
  select(uuid, fsl_fcs_cat.x, fsl_fcs_cat.y, review_check_fsl_fcs_cat.x, review_comment_fsl_fcs_cat.x)
```

Si hay más de una variable por revisar, se puede usar vectores pareados.

```{r}
my_review <- review_variables(jittered_df,
  columns_to_review = c("fsl_fcs_cat.x", "fsl_fcs_score.x"),
  columns_to_compare_with = c("fsl_fcs_cat.y", "fsl_fcs_score.y")
)
```

```{r}
my_review$review_table %>%
  group_by(variable, review_check, review_comment) %>%
  tally()
```
```{r}
my_review$dataset %>%
  filter(!review_check_fsl_fcs_cat.x) %>%
  select(uuid, fsl_fcs_cat.x, fsl_fcs_cat.y, review_comment_fsl_fcs_cat.x)
```
```{r}
my_review$dataset %>%
  filter(!review_check_fsl_fcs_score.x) %>%
  select(uuid, fsl_fcs_score.x, fsl_fcs_score.y, review_comment_fsl_fcs_score.x)
```


# Ejercicios 

## Ejercicio 1

- Añada la **matriz de puntaje de consumo de alimentos** al conjunto de datos. La matriz de consumo de alimentos es un indicador de seguridad alimentaria que utiliza el **puntaje de consumo de alimentos (FCS)**, el **puntaje de hambre en el hogar (HHS)** y el **índice reducido de estrategias de afrontamiento (rCSI)**.

```{r}
#| echo: false
names_to_keep <- grep("rCSI", analysistools::analysistools_MSNA_template_survey$name, value = T)
analysistools::analysistools_MSNA_template_survey %>% 
  filter(name %in% names_to_keep,
         name != "rCSI_module") %>% 
  select(name, `label::english`, type) 
```

```{r}
#| eval: false
library(impactR4PHU)
library(addindicators)
library(dplyr)
```

```{r}
exercise_data <- addindicators::addindicators_MSNA_template_data %>%
  add_fcs(
  cutoffs = "normal",
  fsl_fcs_cereal = "fs_fcs_cereals_grains_roots_tubers",
  fsl_fcs_legumes = "fs_fcs_beans_nuts",
  fsl_fcs_veg = "fs_fcs_vegetables_leaves",
  fsl_fcs_fruit = "fs_fcs_fruit",
  fsl_fcs_meat = "fs_fcs_meat_fish_eggs",
  fsl_fcs_dairy = "fs_fcs_dairy",
  fsl_fcs_sugar = "fs_fcs_sugar",
  fsl_fcs_oil = "fs_fcs_oil_fat_butter"
  ) %>%
  add_hhs(
  fsl_hhs_nofoodhh = "fs_hhs_nofood_yn",
  fsl_hhs_nofoodhh_freq = "fs_hhs_nofood_freq",
  fsl_hhs_sleephungry = "fs_hhs_sleephungry_yn",
  fsl_hhs_sleephungry_freq = "fs_hhs_sleephungry_freq",
  fsl_hhs_alldaynight = "fs_hhs_daynoteating_yn",
  fsl_hhs_alldaynight_freq = "fs_hhs_daynoteating_freq",
  yes_answer = "yes",
  no_answer = "no",
  rarely_answer = "rarely_1_2",
  sometimes_answer = "sometimes_3_10",
  often_answer = "often_10_times"
  )
```

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

¿Intento usar la función `add_fcm_phase` ?

:::

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

La matriz de puntaje de consumo de alimentos necesita 3 indicadores: FCS, rCSI y HHS.
:::

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

¿Ha utilizado la variable correcta de la categoría de HHS (puntaje de hambre en el hogar)?

:::

::: {.callout-tip collapse="true" appearance="minimal"}
### Haga clic para ver la respuesta.

```{r}
#| output: false
my_answer <- exercise_data %>% 
  add_rcsi(
    fsl_rcsi_lessquality = "rCSILessQlty",
    fsl_rcsi_borrow = "rCSIBorrow",
    fsl_rcsi_mealsize = "rCSIMealSize",
    fsl_rcsi_mealadult = "rCSIMealAdult",
    fsl_rcsi_mealnb = "rCSIMealNb"
  ) %>%
  add_fcm_phase(
  )
```
:::

## Ejercicio 2

- En el siguiente conjunto de datos, debe revisar los siguientes indicadores.

  - Puntaje de consumo de alimentos (Food Consumption Score) : **fcs_score**, **fcs_cat**
  - Puntaje de hambre del hogar (Household Hunger Score) : **hhs_score**, **hhs_cat**
  
No olvide escribir la revisión.

```{r}
dataset_to_review <- read.csv("../inputs/06 - exercise - dataset_to_review.csv")

dataset_without_indicators <- addindicators::addindicators_MSNA_template_data
```

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

¿Intento usando la funcion `review_variables` ?

:::

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

¿Como fue definida la variable FCS ?

:::

::: {.callout-note collapse="true" appearance="minimal"}
### Haga clic para ver una pista.

¿Cómo se codificó la categoría para el HHS (puntaje de hambre en el hogar)?
Nombres en el dataset son: "hhs_cat", "hhs_score"
Nombres creados con `add_hhs` son: "fsl_hhs_cat", "fsl_hhs_score"

:::

::: {.callout-tip collapse="true" appearance="minimal"}
### Haga clic para ver la respuesta.

```{r}
#| output: false
my_review <- dataset_without_indicators %>% 
  add_fcs(
  cutoffs = "normal",
  fsl_fcs_cereal = "fs_fcs_cereals_grains_roots_tubers",
  fsl_fcs_legumes = "fs_fcs_beans_nuts",
  fsl_fcs_veg = "fs_fcs_vegetables_leaves",
  fsl_fcs_fruit = "fs_fcs_fruit",
  fsl_fcs_meat = "fs_fcs_meat_fish_eggs",
  fsl_fcs_dairy = "fs_fcs_dairy",
  fsl_fcs_sugar = "fs_fcs_sugar",
  fsl_fcs_oil = "fs_fcs_oil_fat_butter"
  ) %>%
  add_hhs(
  fsl_hhs_nofoodhh = "fs_hhs_nofood_yn",
  fsl_hhs_nofoodhh_freq = "fs_hhs_nofood_freq",
  fsl_hhs_sleephungry = "fs_hhs_sleephungry_yn",
  fsl_hhs_sleephungry_freq = "fs_hhs_sleephungry_freq",
  fsl_hhs_alldaynight = "fs_hhs_daynoteating_yn",
  fsl_hhs_alldaynight_freq = "fs_hhs_daynoteating_freq",
  yes_answer = "yes",
  no_answer = "no",
  rarely_answer = "rarely_1_2",
  sometimes_answer = "sometimes_3_10",
  often_answer = "often_10_times"
  ) %>% 
  select(uuid, fsl_fcs_cat, fsl_fcs_score, fsl_hhs_cat, fsl_hhs_score)
dataset_to_review <- full_join(dataset_to_review, my_review, by = "uuid")

review <- dataset_to_review %>% 
  review_variables(columns_to_review = c("fsl_fcs_cat.x", "fsl_fcs_score.x", "hhs_cat", "hhs_score"),
                   columns_to_compare_with = c("fsl_fcs_cat.y", "fsl_fcs_score.y", "fsl_hhs_cat", "fsl_hhs_score"))

review$review_table %>% 
  group_by(variable,review_check,review_comment) %>% 
  tally()
```

- Hay 10 categorías de FCS que son diferentes.
- Hay 100 categorías de HHS que son diferentes.


```{r}
review$dataset %>% 
  filter(!review_check_fsl_fcs_cat.x) %>% 
  select(uuid, review_comment_fsl_fcs_cat.x, fsl_fcs_score.x, fsl_fcs_cat.x, fsl_fcs_cat.y)

```
- El puntaje de consumo de alimentos tiene diferentes categorías. ¿Qué umbrales se utilizaron para calcular el FCS? ¿Quizás 28-42?


```{r}
review$dataset %>% 
  filter(!review_check_hhs_cat) %>% 
  select(hhs_cat, fsl_hhs_cat) %>% 
  table(useNA = "ifany")
```

- El HHS está bien. El etiquetado es diferente.
:::

# impactR4PHU y humind

Las funciones relacionadas con los chequeos e indicadores de salud pública están más actualizadas en `impactR4PHU.` Más información en [este repositorio](https://github.com/impact-initiatives/impactR4PHU).
Las funciones relacionadas con los indicadores del *Multi Sector Needs Index* están en `humind` Más información en [este repositorio](https://github.com/impact-initiatives-hppu/humind).
